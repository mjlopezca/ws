<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:sec="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xmlns:oauth="http://www.springframework.org/schema/security/oauth2" 
			xmlns:mvc="http://www.springframework.org/schema/mvc"
		xsi:schemaLocation="http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
				http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
				http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd">

	<oauth:expression-handler id="oauthExpressionHandler" />
	<oauth:web-expression-handler id="oauthWebExpressionHandler" />
	
	<sec:global-method-security pre-post-annotations="enabled" proxy-target-class="true">
		<sec:expression-handler ref="oauthExpressionHandler" />
	</sec:global-method-security>
	

	<bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.JdbcTokenStore">
		<constructor-arg index="0" ref="dataSource"/>
	</bean>
	
	<bean id="clientDetailsUserService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg  ref="clientDetailsService"/>
	</bean>
	
	<bean id="clientDetailsService" class="org.springframework.security.oauth2.provider.JdbcClientDetailsService">
			<constructor-arg index="0" ref="dataSource"/>
	</bean>
	

	<sec:authentication-manager id="clientAuthenticationManager">
		<sec:authentication-provider user-service-ref="clientDetailsUserService" />
	</sec:authentication-manager>


	<bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" 		 ref="tokenStore" />
		
		<!-- Default is 12 hours but i increase to 5 days -->
		<property name="accessTokenValiditySeconds" value="432000" />
			
		<property name="supportRefreshToken" value="true" />
	</bean>
	
	<bean id="userApprovalHandler" class="es.carlosgarcia.smallnotes.web.oauth2.UserApprovalHandler">
		<property name="tokenServices" ref="tokenServices" />
	</bean>
	
	<bean id="accessConfirmationController" class="es.carlosgarcia.smallnotes.web.oauth2.AccessConfirmationController">
		<property name="clientDetailsService" ref="clientDetailsService" />
	</bean>
 
	<bean id="oauthAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint"/>

	    	<bean id="oauthAccessDeniedHandler" class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>
	<bean id="clientCredentialsTokenEndpointFilter" class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="clientAuthenticationManager"/>
	</bean>
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg>
	</bean> 

	<oauth:authorization-server client-details-service-ref="clientDetailsService" token-services-ref="tokenServices" 
	    						user-approval-handler-ref="userApprovalHandler"
								token-endpoint-url="/oauth/token" authorization-endpoint-url="/oauth/authorize"  
 								user-approval-page="redirect:/oauth/confirm_access">
		<oauth:authorization-code />
	</oauth:authorization-server>
		
	<oauth:resource-server id="resourceServerFilter" resource-id="api" token-services-ref="tokenServices" />
</beans>
  